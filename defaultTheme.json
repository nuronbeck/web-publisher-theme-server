{
  "breakpoints": ["319px", "575px", "767px", "991px"],
  "maxWidth": 1200,
  "pageWidths": ["720px", "1200px", "1360px"],
  "colors": {
    "black": "#000",
    "white": "#fff",
    "disabled": "#929292",
    "outline": "#005587",
    "grey": {
      "default": "#646464",
      "_50": "#fafafa",
      "_100": "#f3f3f3",
      "_200": "#f1f1f1",
      "_300": "#d2d2d2",
      "_400": "#a6a6a6",
      "_500": "#646464",
      "_600": "#4d4d4d",
      "_700": "#212121",
      "_800": "#101010",
      "_900": "#000"
    },
    "primary": {
      "default": "#2774ae",
      "_40": "#daebfe",
      "_50": "#d3e3ee",
      "_100": "#a8c7de",
      "_200": "#7dabce",
      "_300": "#528fbe",
      "_400": "#3d82b6",
      "_500": "#2774ae",
      "_600": "#005587",
      "_700": "#003b5c",
      "_800": "#143956",
      "_900": "#0f2e44"
    },
    "text": {
      "default": "#000",
      "muted": "#000000",
      "heading": "#2774AE",
      "weight": "bold"
    },
    "secondary": {
      "default": "#ffd100",
      "_40": "#fffae6",
      "_50": "#fff5cc",
      "_100": "#ffec99",
      "_200": "#ffe366",
      "_300": "#ffda33",
      "_400": "#ffd51a",
      "_500": "#ffd100",
      "_600": "#cca700",
      "_700": "#997d00",
      "_800": "#7f6800",
      "_900": "#665300"
    },
    "warning": {
      "default": "#fd6a02",
      "_50": "#fff6f0",
      "_100": "#ffe4d1",
      "_200": "#fed5b8",
      "_300": "#fec69f",
      "_400": "#feb581",
      "_500": "#fe9e5b",
      "_600": "#fd6a02",
      "_700": "#ca5502",
      "_800": "#a44501",
      "_900": "#7f3501"
    },
    "danger": {
      "default": "#d0021b",
      "_50": "#fcf0f0",
      "_100": "#f6d1d1",
      "_200": "#f1b8b8",
      "_300": "#ec9e9e",
      "_400": "#e68080",
      "_500": "#de5959",
      "_600": "#cc0000",
      "_700": "#a30000",
      "_800": "#850000",
      "_900": "#660000"
    },
    "info": {
      "default": "#149eb5",
      "_50": "#f1f9fb",
      "_100": "#d5eef2",
      "_200": "#bde4ea",
      "_300": "#a6dae3",
      "_400": "#8acfda",
      "_500": "#66c0cf",
      "_600": "#149eb5",
      "_700": "#107e91",
      "_800": "#0d6776",
      "_900": "#0a4f5b"
    },
    "success": {
      "default": "green",
      "_50": "#f0f7f0",
      "_100": "#d1e8d1",
      "_200": "#b8dbb8",
      "_300": "#9ecf9e",
      "_400": "#80c080",
      "_500": "#59ac59",
      "_600": "green",
      "_700": "#006600",
      "_800": "#005300",
      "_900": "#004000"
    },
    "link": { "default": "#2D61AE", "weight": "bold" },
    "custom": { "css": "color:rgb(0, 85, 135) !important; &:hover {color: rgb(39, 116, 174) !important;}" },
    "tag": { "border": ["#fc0", "#2DAAE2"] }
  },
  "lineHeights": [0.8, 1, 1.2, 1.5],
  "fonts": {
    "src": "",
    "body": "'Helvetica Neue', 'Helvetica', Arial, sans-serif",
    "heading": "'Helvetica Neue', 'Helvetica', sans-serif"
  },
  "fontSizes": [10, 12, 14, 16, 20, 28, 36, 64],
  "fontWeights": { "light": 300, "normal": "normal", "strong": 500, "bold": 700 },
  "shadows": [
    "none",
    "0 1px 3px rgba(0,0,0,0.15)",
    "none",
    "none",
    "0 4px 9px rgba(0,0,0,0.20)",
    "0 6px 13px rgba(0,0,0,0.20)",
    "0 8px 17px rgba(0,0,0,0.20)",
    "rgb(0 0 0 / 50%) 0px 1px 2px"
  ],
  "borders": [0, 1, 2, 3, 4],
  "space": [0, 4, 8, 16, 24, 32, 64, 128, 256],
  "spacing": {
    "_2px": "0.125rem",
    "_4px": "0.25rem",
    "_8px": "0.5rem",
    "_10px": "0.625rem",
    "_12px": "0.75rem",
    "_16px": "1rem",
    "_20px": "1.25rem",
    "_24px": "1.5rem",
    "_28px": "1.75rem",
    "_32px": "2rem"
  },
  "radii": [0, 1, 3, 5, 9],
  "transitions": { "short": "140ms ease", "medium": "250ms ease", "long": "500ms ease" },
  "buttonSizes": {
    "sm": { "padding": "0.25rem 1rem", "fontSize": 12 },
    "md": { "padding": "0.5rem 1.75rem", "fontSize": 14 },
    "lg": { "padding": "0.75rem 2rem", "fontSize": 16 }
  },
  "buttonStyles": {
    "base": {
      "fontWeight": 600,
      "borderWidth": 1,
      "borderStyle": "solid",
      "borderColor": "transparent",
      "borderRadius": 3
    },
    "grey": {
      "color": "#424242",
      "fill": "#424242",
      "backgroundColor": "#f5f5f5",
      "borderColor": "#e0e0e0",
      "&:hover": { "backgroundColor": "#eeeeee", "borderColor": "#bdbdbd" }
    },
    "primary": {
      "color": "#fff",
      "fill": "#fff",
      "backgroundColor": "#3271E7",
      "borderColor": "#3271E7",
      "&:hover": { "backgroundColor": "#285ab9", "borderColor": "#285ab9" }
    },
    "secondary": {
      "color": "#fff",
      "fill": "#fff",
      "backgroundColor": "purple",
      "borderColor": "purple",
      "&:hover": { "backgroundColor": "#660066", "borderColor": "#660066" }
    },
    "warning": {
      "color": "#fff",
      "fill": "#fff",
      "backgroundColor": "#fd6a02",
      "borderColor": "#fd6a02",
      "&:hover": { "backgroundColor": "#ca5502", "borderColor": "#ca5502" }
    },
    "danger": {
      "color": "#fff",
      "fill": "#fff",
      "backgroundColor": "#cc0000",
      "borderColor": "#cc0000",
      "&:hover": { "backgroundColor": "#a30000", "borderColor": "#a30000" }
    },
    "info": {
      "color": "#fff",
      "fill": "#fff",
      "backgroundColor": "#149eb5",
      "borderColor": "#149eb5",
      "&:hover": { "backgroundColor": "#107e91", "borderColor": "#107e91" }
    },
    "success": {
      "color": "#fff",
      "fill": "#fff",
      "backgroundColor": "green",
      "borderColor": "green",
      "&:hover": { "backgroundColor": "#006600", "borderColor": "#006600" }
    }
  },
  "badgeStyles": {
    "primary": { "backgroundColor": "#f1f1f1", "color": "#212121" },
    "inverted": { "backgroundColor": "#fff", "color": "#2d61ae" },
    "grey": { "backgroundColor": "#f1f1f1", "color": "#000" },
    "css": "border-width: 0",
    "base": { "fontSize": 14, "borderWidth": 1, "borderStyle": "solid", "borderRadius": 5, "padding": "4px 8px" },
    "secondary": { "color": "#fff", "backgroundColor": "purple" },
    "warning": { "color": "#fff", "backgroundColor": "#fd6a02" },
    "danger": { "color": "#fff", "backgroundColor": "#cc0000" },
    "info": { "color": "#fff", "backgroundColor": "#149eb5" },
    "success": { "color": "#fff", "backgroundColor": "green" }
  },
  "iconSizes": {
    "xs": { "width": 16, "height": 16 },
    "sm": { "width": 20, "height": 20 },
    "md": { "width": 24, "height": 24 },
    "lg": { "width": 32, "height": 32 }
  },
  "floatingActionButtonSizes": {
    "sm": { "width": 38, "height": 38 },
    "md": { "width": 50, "height": 50 },
    "lg": { "width": 62, "height": 62 }
  },
  "headerStyles": {
    "topHeader": { "backgroundColor": "#2774ae", "color": "#fff" },
    "title": { "css": "padding-right: 25px;" },
    "mainHeader": {
      "logo": {
        "css": "padding-top: 21px; margin-left: 15px; @media screen and (max-width: 575px) {margin-left: 5px;} @media (max-width: 767px) and (min-width:576px) {margin-left: 20px;} @media (max-width: 991px) and (min-width:768px) {margin-left: 15px;} @media (max-width: 1200px) and (min-width:992px) {margin-left: 0;}"
      },
      "backgroundColor": "#2774ae",
      "hamburgerButton": { "css": "margin-left: 5px;border-radius: 3px; &:hover { background-color: #005587;}" },
      "color": "#fff",
      "border": {
        "name": "1w5plrt-baseTheme--border-border",
        "styles": ";label:baseTheme--border;;label:border;",
        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
      }
    },
    "css": ".bookmark-button { &:hover {background-color:#005587;border-radius: 3px;}}",
    "quicklink": { "css": "&:hover {background-color: #005587; border-radius: 3px; text-decoration: underline;}" },
    "hover": "#d2d2d2",
    "background": { "normal": "#37474f", "text": "#eceff1", "hover": "#41545e", "brighter": "#f0f3f4" }
  },
  "pillStyles": {
    "base": {
      "fontSize": 12,
      "textTransform": "uppercase",
      "borderWidth": 2,
      "borderStyle": "solid",
      "borderRadius": 1000,
      "padding": "2px 8px"
    }
  },
  "solidIconButtonSizes": {
    "sm": { "width": 25, "height": 25 },
    "md": { "width": 35, "height": 35 },
    "lg": { "width": 44, "height": 44 }
  },
  "mediaQueries": {
    "extraSmall": "@media only screen and (max-width: 319px)",
    "small": "@media screen and (max-width: 575px)",
    "medium": "@media screen and (max-width: 767px)",
    "large": "@media screen and (max-width: 991px)"
  },
  "icons": { "myList": { "filled": { "icon": "bookmark" }, "border": { "icon": "bookmark_border" } } },
  "page": {
    "globalLinks": { "bg": "#7268a8" },
    "footer": { "bg": "#2774ae", "color": "#fff" },
    "container": { "bg": "#fff" },
    "header": { "bg": "#fff" },
    "linkBar": { "bg": "#2d61ae" },
    "brandBar": { "bg": "#fff" },
    "breadcrumbsBar": { "bg": "#f1f1f1" },
    "main": { "bg": "#fff" }
  },
  "layout": {
    "banner": {
      "bg": "#fff",
      "content": { "bg": "#fff", "color": "#005587", "boxShadow": "none" },
      "css": "border-bottom: 1px solid #ffd100;",
      "htmlContent": {
        "css": "a{color:#005587!important;font-weight: bold;&:hover {text-decoration:underline;color:#2774ae!important;background-color:transparent;text-decoration:underline !important;}} h1,h2,h3,h4,h5,h6{color:#005587!important;} h1{font-size: 36px !important;} h2{font-size: 28px !important;} h3{font-size: 20px!important;} h4{font-size: 16px!important;}h5{font-size: 14px!important;}h6{font-size: 12px!important;} box-shadow: none;"
      }
    }
  },
  "minisearch": { "mobile": { "icon": { "color": "#fff" } } },
  "bookmarkTile": {
    "css": {
      "styles": "&:hover { background-color: #daebfe};"
    },
    "titleColor": "#000000"
  },
  "search": {
    "ghostButton": { "css": "color: #2D61AE;" },
    "filters": { "header": { "css": "color:rgba(0,0,0,0.87);font-weight: normal;" } },
    "resetButton": {
      "css": "color:#2774AE;font-weight: bold;font-size: 14px;line-height: 22.65px;border: 1px solid #2774AE;border-radius: 4px;"
    },
    "results": {
      "alert": {
        "css": {
          "name": "1q1j75h-baseTheme--css-css",
          "styles": "box-shadow:0 2px 5px rgba(0,0,0,0.18);width:max-content;max-width:280px;border-radius:4px;padding:4px 8px;margin-top:1rem;font-size:12px;@media screen and (min-width: 767px){max-width:90%;};label:baseTheme--css;;label:css;",
          "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
        }
      }
    }
  },
  "heroSearch": {
    "aLink": { "color": "#005587;" },
    "appliedFiltersContainer": {
      "css": "box-shadow: rgb(0 0 0 / 50%) 0px 1px 2px;p{font-size:12px;color: #646464;} h4{font-size:14px;font-weight: normal;color:#212121;background-color: rgb(255, 255, 255);} "
    },
    "results": {
      "emptyWrapper": { "css": "box-shadow: rgb(0 0 0 / 50%) 0px 1px 2px;" },
      "container": { "css": ".ms{&-advanced-search-link {color:#2D61AE;font-weight: bold;font-size: 14px;}}" },
      "css": "@media screen and (max-width:1024px) and (min-width:768px) {margin-right: 16px;}"
    },
    "filterContainer": { "css": "box-shadow: rgb(0 0 0 / 50%) 0px 1px 2px;" },
    "css": "border-radius:3px;border: none;font-size:14px;box-shadow: 0 2px 5px rgb(0 0 0 / 18%);",
    "iconColor": "#646464"
  },
  "advancedSearchInputStyles": { "css": "\n      box-shadow: 0 2px 5px rgba(0,0,0,0.18);\n    " },
  "searchResultsStyles": {
    "css": "color:#005587;font-size: 14px; line-height: 22.65px;",
    "item": { "css": ".result-item { &-content1,&-content2 {color: #000000;font-size: 12px;line-height: 19.42px;}}" }
  },
  "footerStyles": {
    "css": {
      "styles": "[class*='linkSection']{border-top: 1px solid #ffd100;font-weight: bold; div{div{ul{li{a{padding: 10px 16px 10px; display: inline-block; &:hover{background-color:#005587;border-radius:3px; text-decoration:underline;}}}}}}}",
      "name": "17cggq0-baseTheme--css-css",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    },
    "link": {
      "css": "margin: 0; @media screen and (max-width: 575px) {flex: 1 0 100%;} @media (max-width: 991px) and (min-width:576px) {flex: 1 0 auto;} @media screen and (min-width:992px)  {flex: 1 0 auto;}"
    },
    "color": "#fff",
    "hover": "#d2d2d2"
  },
  "homeQuickLinkTileStyles": {
    "backgroundColor": "#fff",
    "moduleWrapper": { "backgroundColor": "#fafafa" },
    "header": {
      "css": "h4{margin-left: -1rem!important;color:#005587;}flex-direction: unset;justify-content: space-between;"
    },
    "showArrow": true,
    "css": "",
    "color": "rgba(0, 0, 0, 0.87)",
    "borderRadius": 2
  },
  "globalQuickLinkTileStyles": {
    "icon": "arrow_forward",
    "css": "",
    "backgroundColor": { "default": "#f1f1f1", "hover": "none" },
    "borderColor": "#fff",
    "color": "#fff",
    "iconColor": "#fff",
    "linkColor": "#fff",
    "moduleWrapper": { "backgroundColor": "#2d61ae" },
    "grid": {
      "css": "\n        [class*=\"SQuickLinkTile\"] {\n          background-color: transparent;\n\n          &:hover {\n            background-color: #101010;\n            [class*=\"SBody\"],\n            [class*=\"STitle\"],\n            [class*=\"StyledITag\"],\n            h4 {\n              color: #fff;\n            }\n          }\n        }\n      "
    }
  },
  "myRecentlyViewedTileStyles": {
    "moduleWrapper": { "backgroundColor": "#fff", "border": "1px solid #ffd100" },
    "gridItem": { "css": "border: 1px solid #f3f3f3;" },
    "css": "color: #2774ae;font-weight: bold;"
  },
  "myListHomeTileStyle": { "moduleWrapper": { "backgroundColor": "#fff", "border": "1px solid #ffd100" } },
  "browseTileStyles": {
    "css": {
      "styles": "font-size: 16px;background-color: #f3f3f3;border-top:0.25rem solid #ffd100;label:css;label:css;",
      "name": "1qd779-baseTheme--css-css",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub3JlY2s3Ny9Eb2N1bWVudHMvREVWRUxPUE1FTlQvQVZBTE9OX0lOTk9WQVRJT05TL2NhcC1tb25vcmVwby9wYWNrYWdlcy93ZWItcHVibGlzaGVyL3NyYy9zdHlsZXMvYmFzZVRoZW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNQWSIsImZpbGUiOiIvVXNlcnMvbm9yZWNrNzcvRG9jdW1lbnRzL0RFVkVMT1BNRU5UL0FWQUxPTl9JTk5PVkFUSU9OUy9jYXAtbW9ub3JlcG8vcGFja2FnZXMvd2ViLXB1Ymxpc2hlci9zcmMvc3R5bGVzL2Jhc2VUaGVtZS50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGNvbG9ycyB9IGZyb20gJy4vZGVmYXVsdENvbG9ycyc7XG5pbXBvcnQgeyBzaGFkb3dzIH0gZnJvbSAnLi9kZWZhdWx0U2hhZG93cyc7XG5pbXBvcnQgeyBicmVha3BvaW50cywgbWVkaWFRdWVyaWVzIH0gZnJvbSAnLi9tZWRpYVF1ZXJpZXMnO1xuaW1wb3J0IHsgZm9udHMsIGZvbnRTaXplcywgZm9udFdlaWdodHMgfSBmcm9tICcuL2RlZmF1bHRGb250cyc7XG5cbmNvbnN0IHNwYWNlID0gWzAsIDQsIDgsIDE2LCAyNCwgMzIsIDY0LCAxMjgsIDI1Nl07XG5cbmV4cG9ydCBjb25zdCBiYXNlVGhlbWUgPSB7XG4gIGJyZWFrcG9pbnRzLFxuICBtZWRpYVF1ZXJpZXMsXG4gIHNoYWRvd3MsXG4gIGNvbG9ycyxcbiAgZm9udHMsXG4gIGZvbnRTaXplcyxcbiAgZm9udFdlaWdodHMsXG4gIHNwYWNlLFxuICBsaW5lSGVpZ2h0czogWzAuOCwgMSwgMS4yLCAxLjVdLFxuICBib3JkZXJzOiBbMCwgMSwgMiwgMywgNF0sXG4gIHNwYWNpbmc6IHtcbiAgICBfMnB4OiAnMC4xMjVyZW0nLFxuICAgIF80cHg6ICcwLjI1cmVtJyxcbiAgICBfOHB4OiAnMC41cmVtJyxcbiAgICBfMTBweDogJzAuNjI1cmVtJyxcbiAgICBfMTJweDogJzAuNzVyZW0nLFxuICAgIF8xNnB4OiAnMXJlbScsXG4gICAgXzIwcHg6ICcxLjI1cmVtJyxcbiAgICBfMjRweDogJzEuNXJlbScsXG4gICAgXzI4cHg6ICcxLjc1cmVtJyxcbiAgICBfMzJweDogJzJyZW0nLFxuICB9LFxuICByYWRpaTogWzAsIDEsIDMsIDUsIDldLFxuICB0cmFuc2l0aW9uczoge1xuICAgIHNob3J0OiAnMTQwbXMgZWFzZScsXG4gICAgbWVkaXVtOiAnMjUwbXMgZWFzZScsXG4gICAgbG9uZzogJzUwMG1zIGVhc2UnLFxuICB9LFxuXG4gIGJhZGdlU3R5bGVzOiB7XG4gICAgcHJpbWFyeToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgICAgY29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGludmVydGVkOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICAgIGNvbG9yOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgIH0sXG4gICAgZ3JleToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleS5fMjAwLFxuICAgICAgY29sb3I6IGNvbG9ycy5ibGFjayxcbiAgICB9LFxuICB9LFxuICBpY29uczoge1xuICAgIG15TGlzdDoge1xuICAgICAgZmlsbGVkOiB7XG4gICAgICAgIGljb246ICdib29rbWFyaycsXG4gICAgICB9LFxuICAgICAgYm9yZGVyOiB7IGljb246ICdib29rbWFya19ib3JkZXInIH0sXG4gICAgfSxcbiAgfSxcbiAgcGFnZToge1xuICAgIGNvbnRhaW5lcjoge1xuICAgICAgYmc6IGNvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGhlYWRlcjoge1xuICAgICAgYmc6IGNvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGxpbmtCYXI6IHtcbiAgICAgIGJnOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgIH0sXG4gICAgYnJhbmRCYXI6IHtcbiAgICAgIGJnOiBjb2xvcnMud2hpdGUsXG4gICAgfSxcbiAgICBicmVhZGNydW1ic0Jhcjoge1xuICAgICAgYmc6IGNvbG9ycy5ncmV5Ll8yMDAsXG4gICAgfSxcbiAgICBtYWluOiB7XG4gICAgICBiZzogY29sb3JzLndoaXRlLFxuICAgIH0sXG4gICAgZ2xvYmFsTGlua3M6IHtcbiAgICAgIGJnOiBjb2xvcnMuZ3JleS5fMjAwLFxuICAgIH0sXG4gICAgZm9vdGVyOiB7XG4gICAgICBiZzogY29sb3JzLnByaW1hcnkuZGVmYXVsdCxcbiAgICAgIGNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgfSxcbiAgfSxcbiAgbGF5b3V0OiB7XG4gICAgYmFubmVyOiB7XG4gICAgICBiZzogY29sb3JzLnByaW1hcnkuZGVmYXVsdCxcbiAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgYmc6IGNvbG9ycy5wcmltYXJ5LmRlZmF1bHQsXG4gICAgICAgIGNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgICAgIGJveFNoYWRvdzogc2hhZG93c1swXSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgbWluaXNlYXJjaDoge1xuICAgIG1vYmlsZToge1xuICAgICAgaWNvbjoge1xuICAgICAgICBjb2xvcjogY29sb3JzLndoaXRlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICAvLyBDb21wb25lbnQgQmFzZSBTdHlsZXNcbiAgYm9va21hcmtUaWxlOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICBbY2xhc3MqPSdTQm9keSddIHtcbiAgICAgICAgY29sb3I6ICR7Y29sb3JzLmxpbmsuZGVmYXVsdH0haW1wb3J0YW50O1xuICAgICAgfVxuXG4gICAgICBpIHtcbiAgICAgICAgY29sb3I6ICR7Y29sb3JzLmdyZXkuXzgwMH07XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgc2VhcmNoOiB7XG4gICAgcmVzdWx0czoge1xuICAgICAgYWxlcnQ6IHtcbiAgICAgICAgY3NzOiBjc3NgXG4gICAgICAgICAgYm94LXNoYWRvdzogJHtzaGFkb3dzWzJdfTtcbiAgICAgICAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gICAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgcGFkZGluZzogNHB4IDhweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcblxuICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR7YnJlYWtwb2ludHNbMl19KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTtcbiAgICAgICAgICB9XG4gICAgICAgIGAsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGhlcm9TZWFyY2g6IHtcbiAgICBpY29uQ29sb3I6IGNvbG9ycy5ncmV5Ll81MDAsXG4gIH0sXG4gIGFkdmFuY2VkU2VhcmNoSW5wdXRTdHlsZXM6IHtcbiAgICBjc3M6IGBcbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93c1syXX07XG4gICAgYCxcbiAgfSxcbiAgc2VhcmNoUmVzdWx0c1N0eWxlczoge1xuICAgIGNzczogYFxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICBjb2xvcjogJHtjb2xvcnMuZ3JleS5fOTAwfTtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBgLFxuICB9LFxuICBoZWFkZXJTdHlsZXM6IHtcbiAgICBjc3M6IGNzc2BcbiAgICAgIC5oZWFkZXItcXVpY2tsaW5rLWNvbnRhaW5lciB7XG4gICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogJHtjb2xvcnMuZ3JleS5fNTAwfTtcbiAgICAgIH1cblxuICAgICAgLmhlYWRlci1xdWlja2xpbmsge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5ncmV5Ll81MDB9O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5ib29rbWFyay1idXR0b24ge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdyZXkuXzUwMH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgLFxuICAgIHRvcEhlYWRlcjoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuYmxhY2ssXG4gICAgICBjb2xvcjogY29sb3JzLndoaXRlLFxuICAgIH0sXG4gICAgbWFpbkhlYWRlcjoge1xuICAgICAgY29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLnByaW1hcnkuZGVmYXVsdCxcbiAgICAgIGJvcmRlcjogY3NzYGAsXG4gICAgfSxcbiAgICBob3ZlcjogY29sb3JzLmdyZXkuXzMwMCxcbiAgfSxcbiAgZm9vdGVyU3R5bGVzOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICBbY2xhc3MqPSdTRm9vdGVyTGlua3NDb250YWluZXInXSB7XG4gICAgICAgIHdpZHRoOiBtYXgtY29udGVudDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIGFbY2xhc3MqPSdTRm9vdGVyTGluayddIHtcbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLnByaW1hcnkuXzMwMH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGAsXG4gICAgY29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICBob3ZlcjogY29sb3JzLmdyZXkuXzMwMCxcbiAgfSxcbiAgaG9tZVF1aWNrTGlua1RpbGVTdHlsZXM6IHtcbiAgICBjc3M6IGBgLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGNvbG9yOiBjb2xvcnMudGV4dC5kZWZhdWx0LFxuICAgIHNob3dBcnJvdzogdHJ1ZSxcbiAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgbW9kdWxlV3JhcHBlcjogeyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy53aGl0ZSB9LFxuICB9LFxuICBnbG9iYWxRdWlja0xpbmtUaWxlU3R5bGVzOiB7XG4gICAgY3NzOiBgYCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHtcbiAgICAgIGRlZmF1bHQ6IGNvbG9ycy5ncmV5Ll8yMDAsXG4gICAgICBob3ZlcjogJ25vbmUnLFxuICAgIH0sXG5cbiAgICBib3JkZXJDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgaWNvbkNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgaWNvbjogJ29wZW5faW5fbmV3JyxcbiAgICBsaW5rQ29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICBtb2R1bGVXcmFwcGVyOiB7IGJhY2tncm91bmRDb2xvcjogY29sb3JzLnByaW1hcnkuZGVmYXVsdCB9LFxuICAgIGdyaWQ6IHtcbiAgICAgIGNzczogYFxuICAgICAgICBbY2xhc3MqPVwiU1F1aWNrTGlua1RpbGVcIl0ge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG4gICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5ncmV5Ll84MDB9O1xuICAgICAgICAgICAgW2NsYXNzKj1cIlNCb2R5XCJdLFxuICAgICAgICAgICAgW2NsYXNzKj1cIlNUaXRsZVwiXSxcbiAgICAgICAgICAgIFtjbGFzcyo9XCJTdHlsZWRJVGFnXCJdLFxuICAgICAgICAgICAgaDQge1xuICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYCxcbiAgICB9LFxuICB9LFxuICBteVJlY2VudGx5Vmlld2VkVGlsZVN0eWxlczoge1xuICAgIG1vZHVsZVdyYXBwZXI6IHsgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMud2hpdGUgfSxcbiAgfSxcbiAgbXlMaXN0SG9tZVRpbGVTdHlsZToge1xuICAgIG1vZHVsZVdyYXBwZXI6IHsgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleS5fMjAwIH0sXG4gIH0sXG4gIGJyb3dzZVRpbGVTdHlsZXM6IHtcbiAgICBjc3M6IGNzc2BcbiAgICAgIGJvcmRlci10b3A6IDAuMjVyZW0gc29saWQgJHtjb2xvcnMucHJpbWFyeS5kZWZhdWx0fTtcbiAgICBgLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGNvbG9yOiBjb2xvcnMudGV4dC5kZWZhdWx0LFxuICAgIHNob3dBcnJvdzogdHJ1ZSxcbiAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgbW9kdWxlV3JhcHBlcjogeyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5ncmV5Ll8yMDAgfSxcbiAgfSxcbiAgbGVhcm5pbmdPdXRjb21lc1N0eWxlczoge1xuICAgIG51bWJlclN0eWxlczoge1xuICAgICAgY29sb3I6IGNvbG9ycy50ZXh0LmRlZmF1bHQsXG4gICAgfSxcbiAgICBhY2NvcmRpb25EZXNjcmlwdGlvbjoge1xuICAgICAgY3NzOiBjc3NgXG4gICAgICAgIGJvcmRlci10b3A6IDA7XG4gICAgICBgLFxuICAgIH0sXG4gIH0sXG4gIGFjYWRlbWljSXRlbXNTdHlsZXM6IHtcbiAgICBsaW5rR3JvdXA6IHtcbiAgICAgIGNzczogY3NzYFxuICAgICAgICAuY3MtaXRlbSB7XG4gICAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdyZXkuXzIwMH07XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgIH0sXG4gIH0sXG4gIGFjYWRlbWljSXRlbXNRdWlja0xpbmtUaWxlU3R5bGVzOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAke2NvbG9ycy5ncmV5Ll83MDB9O1xuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBjb2xvcjogJHtjb2xvcnMuZ3JleS5fNzAwfTtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMC4yNXJlbTtcbiAgICAgICAgfVxuICAgICAgICBpIHtcbiAgICAgICAgICBjb2xvcjogJHtjb2xvcnMucHJpbWFyeS5kZWZhdWx0fTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICA6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5ncmV5Ll8yMDB9O1xuICAgICAgICBpIHtcbiAgICAgICAgICBjb2xvcjogJHtjb2xvcnMucHJpbWFyeS5kZWZhdWx0fTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGAsXG4gIH0sXG4gIGNzU3R5bGVzOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICAuY3MtaXRlbSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgYWxlcnRzOiB7XG4gICAgYmFzZTogY3NzYFxuICAgICAgbWFyZ2luLXRvcDogMC43NXJlbTtcbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93c1sxXX07XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBwYWRkaW5nOiAwLjc1cmVtO1xuICAgIGAsIC8vIG5vdCBkZWxldGluZyB0aGUgYm90dG9tIG9uZSBiZWNhdXNlIGl0J3MgdXNlZCBpbiBwbGFjZXNcbiAgICBkYW5nZXI6IGNzc2BcbiAgICAgIG1hcmdpbi10b3A6IDAuNzVyZW07XG4gICAgICBib3gtc2hhZG93OiAke3NoYWRvd3NbMV19O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgcGFkZGluZzogMC43NXJlbTtcbiAgICBgLFxuICB9LFxuICBpbnRlcm5hbE5hdjoge1xuICAgIGljb246IHtcbiAgICAgIGNvbG9yOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgIH0sXG4gIH0sXG4gIHRpbGVJY29uOiB7XG4gICAgc2l6ZTogMjAsXG4gIH0sXG4gIGxvZ286ICdodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL21lZGlhLmZvcnVtYmVlLmNvbS9sb2dvcy9kZjY0ZDVhOS1iYzZiLTQzZDktYTY1YS1hYWFhNjE4OWNkODcvOTAwLnBuZycsXG4gIGZvb3RlckxvZ29Vcmk6ICdodHRwczovL2NvdXJzZWxvb3AuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE4LzExL2NvdXJzZWxvb3AtbG9nby5zdmcnLFxuICBsb2dvV2lkdGg6ICc1MHB4JyxcbiAgLy8gQ291cnNlbG9vcCBQcm9kdWN0IEJyYW5kaW5nXG4gIHByb2R1Y3Q6IHtcbiAgICBmb250OiBmb250cy5ib2R5LFxuICAgIGNvbG9yczoge1xuICAgICAgYmFja2dyb3VuZDogJyMwMDE2M2QnLFxuICAgICAgdGV4dDoge1xuICAgICAgICBkZWZhdWx0OiAnI2IzYjNiMycsXG4gICAgICAgIGxpbms6IHsgZGVmYXVsdDogJyNiM2IzYjMnLCBob3ZlcjogJyNmNWY1ZjUnIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHllYXJTd2l0Y2hlcjoge1xuICAgIGNzczogY3NzYFxuICAgICAgLyogTWFrZSB0aGUgeWVhciBzd2l0Y2hlciBsb29rIGxpa2UgYSB0YWcgZm9yIFVOU1cgb25seSAqL1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcblxuICAgICAgLyogc29tZXdoYXQgY29waWVkIGZyb20gcHJvcHMgaW4gdXNlZCA8VGFnPiAqL1xuICAgICAgYmFja2dyb3VuZDogJHtjb2xvcnMud2hpdGV9O1xuICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xuXG4gICAgICAvKiBjb3BpZWQgZnJvbSB2aWV3aW5nWWVhciBwcm9wZXJ0eSBhYm92ZSAqL1xuICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgICAgW2NsYXNzKj0nWWVhclN3aXRjaGVyVGV4dENvbnRhaW5lciddIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAke3NwYWNlWzNdfXB4O1xuICAgICAgfVxuXG4gICAgICAucG9wb3ZlckJ1dHRvbiB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBwYWRkaW5nOiAxMHB4ICR7c3BhY2VbM119cHggIWltcG9ydGFudDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB9XG5cbiAgICAgIFtjbGFzcyo9J1llYXJTd2l0Y2hlclRvb2x0aXBDb250YWluZXInXSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgb2ZmZXJpbmdTd2l0Y2hlcjoge1xuICAgIGNzczogY3NzYFxuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAke2NvbG9ycy5ncmV5Ll8zMDB9O1xuICAgIGAsXG4gIH0sXG4gIHN3aXRjaGVyOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICAvKiBNYWtlIHRoZSB5ZWFyIHN3aXRjaGVyIGxvb2sgbGlrZSBhIHRhZyBmb3IgVU5TVyBvbmx5ICovXG4gICAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG5cbiAgICAgIC8qIHNvbWV3aGF0IGNvcGllZCBmcm9tIHByb3BzIGluIHVzZWQgPFRhZz4gKi9cbiAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3JzLndoaXRlfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcblxuICAgICAgLyogc29tZXdoYXQgY29waWVkIGZyb20gPFRhZz4gc3R5bGVkIGNvbXBvbmVudCBzdHlsZXMgKi9cbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93c1syXX07XG4gICAgICBwYWRkaW5nOiAke3NwYWNlWzFdfXB4ICR7c3BhY2VbMl19cHg7XG4gICAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkICR7Y29sb3JzLnRhZy5ib3JkZXJbMV19O1xuXG4gICAgICAvKiBjb3BpZWQgZnJvbSB2aWV3aW5nWWVhciBwcm9wZXJ0eSBhYm92ZSAqL1xuICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgICAgW2NsYXNzKj0nWWVhclN3aXRjaGVyVGV4dENvbnRhaW5lciddIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAke3NwYWNlWzNdfXB4O1xuICAgICAgfVxuXG4gICAgICAucG9wb3ZlckJ1dHRvbiB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBwYWRkaW5nOiAxMHB4ICR7c3BhY2VbM119cHggIWltcG9ydGFudDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgYWNhZGVtaWNJdGVtOiB7XG4gICAgYWxlcnQ6IHtcbiAgICAgIGNzczogY3NzYFxuICAgICAgICBtYXJnaW4tbGVmdDogMjVweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzNXB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NzRweCkge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgICB9XG4gICAgICBgLFxuICAgIH0sXG4gIH0sXG59O1xuIl19 */"
    },
    "moduleWrapper": { "backgroundColor": "#fff" },
    "tileHover": "background-color: #daebfe",
    "showArrow": true,
    "iconColorTile": "#2774ae",
    "borderRadius": "0",
    "iconColor": "#2774ae",
    "backgroundColor": "#fff",
    "color": "rgba(0, 0, 0, 0.87)"
  },
  "learningOutcomesStyles": {
    "numberStyles": { "color": "rgba(0, 0, 0, 0.87)" },
    "accordionDescription": {
      "css": {
        "name": "1q6ih1q-baseTheme--css",
        "styles": "border-top:0;label:baseTheme--css;",
        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
      }
    }
  },
  "academicItemsStyles": {
    "header": { "css": "color:#000000;" },
    "linkGroup": {
      "css": ".unit-title { font-weight: bold; } .cs-item:hover { background-color: #daebfe; text-decoration: none; }"
    },
    "navMenu": {
      "css": "color:#005587;font-weight: bold;line-height: 22.65px; @media screen and (max-width: 767px) { &:hover { background-color: inherit; } }"
    }
  },
  "academicItemsQuickLinkTileStyles": {
    "css": {
      "name": "1oe0411-baseTheme--css-css",
      "styles": "background-color:transparent;a{color:#212121;span{color:#212121;padding-bottom:0.25rem;}i{color:#2d61ae;}}:hover{background-color:#f1f1f1;i{color:#2d61ae;}};label:baseTheme--css;;label:css;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    }
  },
  "csStyles": {
    "css": {
      "name": "1umsn7-baseTheme--css",
      "styles": ".cs-item{font-weight:normal;};label:baseTheme--css;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    }
  },
  "alerts": {
    "base": {
      "name": "1pm2zkz-baseTheme--base-base",
      "styles": "margin-top:0.75rem;box-shadow:0 1px 3px rgba(0,0,0,0.15);border-radius:4px;padding:0.75rem;;label:baseTheme--base;;label:base;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    },
    "danger": {
      "name": "1sjt2yr-baseTheme--danger-danger",
      "styles": "margin-top:0.75rem;box-shadow:0 1px 3px rgba(0,0,0,0.15);border-radius:4px;padding:0.75rem;;label:baseTheme--danger;;label:danger;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    }
  },
  "internalNav": { "icon": { "color": "#2d61ae" } },
  "tileIcon": { "size": 20 },
  "logo": "https://courseloop-assets.s3.us-west-1.amazonaws.com/ucla/ucla-logo.svg",
  "footerLogoUri": "https://courseloop-assets.s3.us-west-1.amazonaws.com/ucla/ucla-logo.svg",
  "logoWidth": "100px",
  "product": {
    "colors": {
      "background": "#2774ae",
      "text": { "default": "white", "link": { "default": "white", "hover": "white" } }
    },
    "poweredBy": { "justifyContent": "flex-end" },
    "font": "'Roboto', 'Helvetica', 'Arial', sans-serif"
  },
  "yearSwitcher": {
    "css": {
      "name": "pj6d51-baseTheme--css-css",
      "styles": "font-size:14px;font-weight:700;background:#fff;padding:0!important;border-radius:2px;font-family:'Roboto', sans-serif;white-space:nowrap;justify-content:flex-end;[class*='YearSwitcherTextContainer']{padding:10px 16px;}.popoverButton{line-height:inherit;padding:10px 16px!important;font-family:'Roboto', sans-serif;}[class*='YearSwitcherTooltipContainer']{display:none;};label:baseTheme--css;;label:css;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    }
  },
  "offeringSwitcher": {
    "css": {
      "name": "f888xy-baseTheme--css-css",
      "styles": "border-left:1px solid #d2d2d2;;label:baseTheme--css;;label:css;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub3JlY2s3Ny9Eb2N1bWVudHMvREVWRUxPUE1FTlQvQVZBTE9OX0lOTk9WQVRJT05TL2NhcC1tb25vcmVwby9wYWNrYWdlcy93ZWItcHVibGlzaGVyL3NyYy9zdHlsZXMvYmFzZVRoZW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVYWSIsImZpbGUiOiIvVXNlcnMvbm9yZWNrNzcvRG9jdW1lbnRzL0RFVkVMT1BNRU5UL0FWQUxPTl9JTk5PVkFUSU9OUy9jYXAtbW9ub3JlcG8vcGFja2FnZXMvd2ViLXB1Ymxpc2hlci9zcmMvc3R5bGVzL2Jhc2VUaGVtZS50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGNvbG9ycyB9IGZyb20gJy4vZGVmYXVsdENvbG9ycyc7XG5pbXBvcnQgeyBzaGFkb3dzIH0gZnJvbSAnLi9kZWZhdWx0U2hhZG93cyc7XG5pbXBvcnQgeyBicmVha3BvaW50cywgbWVkaWFRdWVyaWVzIH0gZnJvbSAnLi9tZWRpYVF1ZXJpZXMnO1xuaW1wb3J0IHsgZm9udHMsIGZvbnRTaXplcywgZm9udFdlaWdodHMgfSBmcm9tICcuL2RlZmF1bHRGb250cyc7XG5cbmNvbnN0IHNwYWNlID0gWzAsIDQsIDgsIDE2LCAyNCwgMzIsIDY0LCAxMjgsIDI1Nl07XG5cbmV4cG9ydCBjb25zdCBiYXNlVGhlbWUgPSB7XG4gIGJyZWFrcG9pbnRzLFxuICBtZWRpYVF1ZXJpZXMsXG4gIHNoYWRvd3MsXG4gIGNvbG9ycyxcbiAgZm9udHMsXG4gIGZvbnRTaXplcyxcbiAgZm9udFdlaWdodHMsXG4gIHNwYWNlLFxuICBsaW5lSGVpZ2h0czogWzAuOCwgMSwgMS4yLCAxLjVdLFxuICBib3JkZXJzOiBbMCwgMSwgMiwgMywgNF0sXG4gIHNwYWNpbmc6IHtcbiAgICBfMnB4OiAnMC4xMjVyZW0nLFxuICAgIF80cHg6ICcwLjI1cmVtJyxcbiAgICBfOHB4OiAnMC41cmVtJyxcbiAgICBfMTBweDogJzAuNjI1cmVtJyxcbiAgICBfMTJweDogJzAuNzVyZW0nLFxuICAgIF8xNnB4OiAnMXJlbScsXG4gICAgXzIwcHg6ICcxLjI1cmVtJyxcbiAgICBfMjRweDogJzEuNXJlbScsXG4gICAgXzI4cHg6ICcxLjc1cmVtJyxcbiAgICBfMzJweDogJzJyZW0nLFxuICB9LFxuICByYWRpaTogWzAsIDEsIDMsIDUsIDldLFxuICB0cmFuc2l0aW9uczoge1xuICAgIHNob3J0OiAnMTQwbXMgZWFzZScsXG4gICAgbWVkaXVtOiAnMjUwbXMgZWFzZScsXG4gICAgbG9uZzogJzUwMG1zIGVhc2UnLFxuICB9LFxuXG4gIGJhZGdlU3R5bGVzOiB7XG4gICAgcHJpbWFyeToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgICAgY29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGludmVydGVkOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICAgIGNvbG9yOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgIH0sXG4gICAgZ3JleToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleS5fMjAwLFxuICAgICAgY29sb3I6IGNvbG9ycy5ibGFjayxcbiAgICB9LFxuICB9LFxuICBpY29uczoge1xuICAgIG15TGlzdDoge1xuICAgICAgZmlsbGVkOiB7XG4gICAgICAgIGljb246ICdib29rbWFyaycsXG4gICAgICB9LFxuICAgICAgYm9yZGVyOiB7IGljb246ICdib29rbWFya19ib3JkZXInIH0sXG4gICAgfSxcbiAgfSxcbiAgcGFnZToge1xuICAgIGNvbnRhaW5lcjoge1xuICAgICAgYmc6IGNvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGhlYWRlcjoge1xuICAgICAgYmc6IGNvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGxpbmtCYXI6IHtcbiAgICAgIGJnOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgIH0sXG4gICAgYnJhbmRCYXI6IHtcbiAgICAgIGJnOiBjb2xvcnMud2hpdGUsXG4gICAgfSxcbiAgICBicmVhZGNydW1ic0Jhcjoge1xuICAgICAgYmc6IGNvbG9ycy5ncmV5Ll8yMDAsXG4gICAgfSxcbiAgICBtYWluOiB7XG4gICAgICBiZzogY29sb3JzLndoaXRlLFxuICAgIH0sXG4gICAgZ2xvYmFsTGlua3M6IHtcbiAgICAgIGJnOiBjb2xvcnMuZ3JleS5fMjAwLFxuICAgIH0sXG4gICAgZm9vdGVyOiB7XG4gICAgICBiZzogY29sb3JzLnByaW1hcnkuZGVmYXVsdCxcbiAgICAgIGNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgfSxcbiAgfSxcbiAgbGF5b3V0OiB7XG4gICAgYmFubmVyOiB7XG4gICAgICBiZzogY29sb3JzLnByaW1hcnkuZGVmYXVsdCxcbiAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgYmc6IGNvbG9ycy5wcmltYXJ5LmRlZmF1bHQsXG4gICAgICAgIGNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgICAgIGJveFNoYWRvdzogc2hhZG93c1swXSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgbWluaXNlYXJjaDoge1xuICAgIG1vYmlsZToge1xuICAgICAgaWNvbjoge1xuICAgICAgICBjb2xvcjogY29sb3JzLndoaXRlLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICAvLyBDb21wb25lbnQgQmFzZSBTdHlsZXNcbiAgYm9va21hcmtUaWxlOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICBbY2xhc3MqPSdTQm9keSddIHtcbiAgICAgICAgY29sb3I6ICR7Y29sb3JzLmxpbmsuZGVmYXVsdH0haW1wb3J0YW50O1xuICAgICAgfVxuXG4gICAgICBpIHtcbiAgICAgICAgY29sb3I6ICR7Y29sb3JzLmdyZXkuXzgwMH07XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgc2VhcmNoOiB7XG4gICAgcmVzdWx0czoge1xuICAgICAgYWxlcnQ6IHtcbiAgICAgICAgY3NzOiBjc3NgXG4gICAgICAgICAgYm94LXNoYWRvdzogJHtzaGFkb3dzWzJdfTtcbiAgICAgICAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gICAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgcGFkZGluZzogNHB4IDhweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcblxuICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR7YnJlYWtwb2ludHNbMl19KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTtcbiAgICAgICAgICB9XG4gICAgICAgIGAsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGhlcm9TZWFyY2g6IHtcbiAgICBpY29uQ29sb3I6IGNvbG9ycy5ncmV5Ll81MDAsXG4gIH0sXG4gIGFkdmFuY2VkU2VhcmNoSW5wdXRTdHlsZXM6IHtcbiAgICBjc3M6IGBcbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93c1syXX07XG4gICAgYCxcbiAgfSxcbiAgc2VhcmNoUmVzdWx0c1N0eWxlczoge1xuICAgIGNzczogYFxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICBjb2xvcjogJHtjb2xvcnMuZ3JleS5fOTAwfTtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBgLFxuICB9LFxuICBoZWFkZXJTdHlsZXM6IHtcbiAgICBjc3M6IGNzc2BcbiAgICAgIC5oZWFkZXItcXVpY2tsaW5rLWNvbnRhaW5lciB7XG4gICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogJHtjb2xvcnMuZ3JleS5fNTAwfTtcbiAgICAgIH1cblxuICAgICAgLmhlYWRlci1xdWlja2xpbmsge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5ncmV5Ll81MDB9O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5ib29rbWFyay1idXR0b24ge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdyZXkuXzUwMH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgLFxuICAgIHRvcEhlYWRlcjoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuYmxhY2ssXG4gICAgICBjb2xvcjogY29sb3JzLndoaXRlLFxuICAgIH0sXG4gICAgbWFpbkhlYWRlcjoge1xuICAgICAgY29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLnByaW1hcnkuZGVmYXVsdCxcbiAgICAgIGJvcmRlcjogY3NzYGAsXG4gICAgfSxcbiAgICBob3ZlcjogY29sb3JzLmdyZXkuXzMwMCxcbiAgfSxcbiAgZm9vdGVyU3R5bGVzOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICBbY2xhc3MqPSdTRm9vdGVyTGlua3NDb250YWluZXInXSB7XG4gICAgICAgIHdpZHRoOiBtYXgtY29udGVudDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIGFbY2xhc3MqPSdTRm9vdGVyTGluayddIHtcbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLnByaW1hcnkuXzMwMH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGAsXG4gICAgY29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICBob3ZlcjogY29sb3JzLmdyZXkuXzMwMCxcbiAgfSxcbiAgaG9tZVF1aWNrTGlua1RpbGVTdHlsZXM6IHtcbiAgICBjc3M6IGBgLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGNvbG9yOiBjb2xvcnMudGV4dC5kZWZhdWx0LFxuICAgIHNob3dBcnJvdzogdHJ1ZSxcbiAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgbW9kdWxlV3JhcHBlcjogeyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy53aGl0ZSB9LFxuICB9LFxuICBnbG9iYWxRdWlja0xpbmtUaWxlU3R5bGVzOiB7XG4gICAgY3NzOiBgYCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHtcbiAgICAgIGRlZmF1bHQ6IGNvbG9ycy5ncmV5Ll8yMDAsXG4gICAgICBob3ZlcjogJ25vbmUnLFxuICAgIH0sXG5cbiAgICBib3JkZXJDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgaWNvbkNvbG9yOiBjb2xvcnMud2hpdGUsXG4gICAgaWNvbjogJ29wZW5faW5fbmV3JyxcbiAgICBsaW5rQ29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICBtb2R1bGVXcmFwcGVyOiB7IGJhY2tncm91bmRDb2xvcjogY29sb3JzLnByaW1hcnkuZGVmYXVsdCB9LFxuICAgIGdyaWQ6IHtcbiAgICAgIGNzczogYFxuICAgICAgICBbY2xhc3MqPVwiU1F1aWNrTGlua1RpbGVcIl0ge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG4gICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5ncmV5Ll84MDB9O1xuICAgICAgICAgICAgW2NsYXNzKj1cIlNCb2R5XCJdLFxuICAgICAgICAgICAgW2NsYXNzKj1cIlNUaXRsZVwiXSxcbiAgICAgICAgICAgIFtjbGFzcyo9XCJTdHlsZWRJVGFnXCJdLFxuICAgICAgICAgICAgaDQge1xuICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYCxcbiAgICB9LFxuICB9LFxuICBteVJlY2VudGx5Vmlld2VkVGlsZVN0eWxlczoge1xuICAgIG1vZHVsZVdyYXBwZXI6IHsgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMud2hpdGUgfSxcbiAgfSxcbiAgbXlMaXN0SG9tZVRpbGVTdHlsZToge1xuICAgIG1vZHVsZVdyYXBwZXI6IHsgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZ3JleS5fMjAwIH0sXG4gIH0sXG4gIGJyb3dzZVRpbGVTdHlsZXM6IHtcbiAgICBjc3M6IGNzc2BcbiAgICAgIGJvcmRlci10b3A6IDAuMjVyZW0gc29saWQgJHtjb2xvcnMucHJpbWFyeS5kZWZhdWx0fTtcbiAgICBgLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGNvbG9yOiBjb2xvcnMudGV4dC5kZWZhdWx0LFxuICAgIHNob3dBcnJvdzogdHJ1ZSxcbiAgICBib3JkZXJSYWRpdXM6IDIsXG4gICAgbW9kdWxlV3JhcHBlcjogeyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5ncmV5Ll8yMDAgfSxcbiAgfSxcbiAgbGVhcm5pbmdPdXRjb21lc1N0eWxlczoge1xuICAgIG51bWJlclN0eWxlczoge1xuICAgICAgY29sb3I6IGNvbG9ycy50ZXh0LmRlZmF1bHQsXG4gICAgfSxcbiAgICBhY2NvcmRpb25EZXNjcmlwdGlvbjoge1xuICAgICAgY3NzOiBjc3NgXG4gICAgICAgIGJvcmRlci10b3A6IDA7XG4gICAgICBgLFxuICAgIH0sXG4gIH0sXG4gIGFjYWRlbWljSXRlbXNTdHlsZXM6IHtcbiAgICBsaW5rR3JvdXA6IHtcbiAgICAgIGNzczogY3NzYFxuICAgICAgICAuY3MtaXRlbSB7XG4gICAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdyZXkuXzIwMH07XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgIH0sXG4gIH0sXG4gIGFjYWRlbWljSXRlbXNRdWlja0xpbmtUaWxlU3R5bGVzOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAke2NvbG9ycy5ncmV5Ll83MDB9O1xuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBjb2xvcjogJHtjb2xvcnMuZ3JleS5fNzAwfTtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMC4yNXJlbTtcbiAgICAgICAgfVxuICAgICAgICBpIHtcbiAgICAgICAgICBjb2xvcjogJHtjb2xvcnMucHJpbWFyeS5kZWZhdWx0fTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICA6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5ncmV5Ll8yMDB9O1xuICAgICAgICBpIHtcbiAgICAgICAgICBjb2xvcjogJHtjb2xvcnMucHJpbWFyeS5kZWZhdWx0fTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGAsXG4gIH0sXG4gIGNzU3R5bGVzOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICAuY3MtaXRlbSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgYWxlcnRzOiB7XG4gICAgYmFzZTogY3NzYFxuICAgICAgbWFyZ2luLXRvcDogMC43NXJlbTtcbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93c1sxXX07XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBwYWRkaW5nOiAwLjc1cmVtO1xuICAgIGAsIC8vIG5vdCBkZWxldGluZyB0aGUgYm90dG9tIG9uZSBiZWNhdXNlIGl0J3MgdXNlZCBpbiBwbGFjZXNcbiAgICBkYW5nZXI6IGNzc2BcbiAgICAgIG1hcmdpbi10b3A6IDAuNzVyZW07XG4gICAgICBib3gtc2hhZG93OiAke3NoYWRvd3NbMV19O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgcGFkZGluZzogMC43NXJlbTtcbiAgICBgLFxuICB9LFxuICBpbnRlcm5hbE5hdjoge1xuICAgIGljb246IHtcbiAgICAgIGNvbG9yOiBjb2xvcnMucHJpbWFyeS5kZWZhdWx0LFxuICAgIH0sXG4gIH0sXG4gIHRpbGVJY29uOiB7XG4gICAgc2l6ZTogMjAsXG4gIH0sXG4gIGxvZ286ICdodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL21lZGlhLmZvcnVtYmVlLmNvbS9sb2dvcy9kZjY0ZDVhOS1iYzZiLTQzZDktYTY1YS1hYWFhNjE4OWNkODcvOTAwLnBuZycsXG4gIGZvb3RlckxvZ29Vcmk6ICdodHRwczovL2NvdXJzZWxvb3AuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE4LzExL2NvdXJzZWxvb3AtbG9nby5zdmcnLFxuICBsb2dvV2lkdGg6ICc1MHB4JyxcbiAgLy8gQ291cnNlbG9vcCBQcm9kdWN0IEJyYW5kaW5nXG4gIHByb2R1Y3Q6IHtcbiAgICBmb250OiBmb250cy5ib2R5LFxuICAgIGNvbG9yczoge1xuICAgICAgYmFja2dyb3VuZDogJyMwMDE2M2QnLFxuICAgICAgdGV4dDoge1xuICAgICAgICBkZWZhdWx0OiAnI2IzYjNiMycsXG4gICAgICAgIGxpbms6IHsgZGVmYXVsdDogJyNiM2IzYjMnLCBob3ZlcjogJyNmNWY1ZjUnIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHllYXJTd2l0Y2hlcjoge1xuICAgIGNzczogY3NzYFxuICAgICAgLyogTWFrZSB0aGUgeWVhciBzd2l0Y2hlciBsb29rIGxpa2UgYSB0YWcgZm9yIFVOU1cgb25seSAqL1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcblxuICAgICAgLyogc29tZXdoYXQgY29waWVkIGZyb20gcHJvcHMgaW4gdXNlZCA8VGFnPiAqL1xuICAgICAgYmFja2dyb3VuZDogJHtjb2xvcnMud2hpdGV9O1xuICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xuXG4gICAgICAvKiBjb3BpZWQgZnJvbSB2aWV3aW5nWWVhciBwcm9wZXJ0eSBhYm92ZSAqL1xuICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgICAgW2NsYXNzKj0nWWVhclN3aXRjaGVyVGV4dENvbnRhaW5lciddIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAke3NwYWNlWzNdfXB4O1xuICAgICAgfVxuXG4gICAgICAucG9wb3ZlckJ1dHRvbiB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBwYWRkaW5nOiAxMHB4ICR7c3BhY2VbM119cHggIWltcG9ydGFudDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB9XG5cbiAgICAgIFtjbGFzcyo9J1llYXJTd2l0Y2hlclRvb2x0aXBDb250YWluZXInXSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgb2ZmZXJpbmdTd2l0Y2hlcjoge1xuICAgIGNzczogY3NzYFxuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAke2NvbG9ycy5ncmV5Ll8zMDB9O1xuICAgIGAsXG4gIH0sXG4gIHN3aXRjaGVyOiB7XG4gICAgY3NzOiBjc3NgXG4gICAgICAvKiBNYWtlIHRoZSB5ZWFyIHN3aXRjaGVyIGxvb2sgbGlrZSBhIHRhZyBmb3IgVU5TVyBvbmx5ICovXG4gICAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG5cbiAgICAgIC8qIHNvbWV3aGF0IGNvcGllZCBmcm9tIHByb3BzIGluIHVzZWQgPFRhZz4gKi9cbiAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3JzLndoaXRlfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcblxuICAgICAgLyogc29tZXdoYXQgY29waWVkIGZyb20gPFRhZz4gc3R5bGVkIGNvbXBvbmVudCBzdHlsZXMgKi9cbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93c1syXX07XG4gICAgICBwYWRkaW5nOiAke3NwYWNlWzFdfXB4ICR7c3BhY2VbMl19cHg7XG4gICAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkICR7Y29sb3JzLnRhZy5ib3JkZXJbMV19O1xuXG4gICAgICAvKiBjb3BpZWQgZnJvbSB2aWV3aW5nWWVhciBwcm9wZXJ0eSBhYm92ZSAqL1xuICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgICAgW2NsYXNzKj0nWWVhclN3aXRjaGVyVGV4dENvbnRhaW5lciddIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAke3NwYWNlWzNdfXB4O1xuICAgICAgfVxuXG4gICAgICAucG9wb3ZlckJ1dHRvbiB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBwYWRkaW5nOiAxMHB4ICR7c3BhY2VbM119cHggIWltcG9ydGFudDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICR7Zm9udHMuaGVhZGluZ307XG4gICAgICB9XG4gICAgYCxcbiAgfSxcbiAgYWNhZGVtaWNJdGVtOiB7XG4gICAgYWxlcnQ6IHtcbiAgICAgIGNzczogY3NzYFxuICAgICAgICBtYXJnaW4tbGVmdDogMjVweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzNXB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NzRweCkge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgICB9XG4gICAgICBgLFxuICAgIH0sXG4gIH0sXG59O1xuIl19 */"
    }
  },
  "switcher": {
    "css": {
      "name": "13limtp-baseTheme--css-css",
      "styles": "font-size:14px!important;font-weight:700;background:#fff;border-radius:2px;box-shadow:0 2px 5px rgba(0,0,0,0.18);padding:4px 8px;border-left:4px solid #2DAAE2;font-family:'Roboto', sans-serif;white-space:nowrap;justify-content:flex-end;[class*='YearSwitcherTextContainer']{padding:10px 16px;}.popoverButton{line-height:inherit;padding:10px 16px!important;font-family:'Roboto', sans-serif;};label:baseTheme--css;;label:css;",
      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
    }
  },
  "academicItem": {
    "alert": {
      "css": {
        "name": "1mgqs3u-baseTheme--css",
        "styles": "margin-left:25px;margin-right:20px;@media (max-width: 1200px){margin-left:35px;margin-right:35px;}@media (max-width: 574px){margin-left:1rem;margin-right:1rem;}@media (max-width: 767px){margin-bottom:1rem;};label:baseTheme--css;",
        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
      }
    }
  },
  "searchInputStyles": {
    "css": "font-size:14px;color:rgba(0,0,0,0.87);box-shadow: 0 2px 5px rgb(0 0 0 / 18%);border-radius:2px;border: none; div{span{line-height: 2.5;}}"
  },
  "tabStyles": {
    "borderColor": "#ffd100",
    "selectedColor": "#ffd100",
    "fullWidthDivider": { "css": "border-bottom: 1px solid #ffd100;" },
    "css": "li {text-transform: unset;font-weight: normal;}"
  },
  "componentHeadingStyles": { "color": "#ffd100", "css": "color:#005587; ", "title": { "color": "#005587" } },
  "introStyles": {
    "subheading": { "css": "color:#2774AE;" },
    "badge": { "css": "font-size: 14px;color:rgba(0,0,0,0.87);background-color: #F1F1F1;" },
    "flexItem": { "subheading": { "css": "padding-right: 1rem;margin-right: 8px;border-right: 1px solid #ffd100;" } }
  },
  "cardStyles": { "css": "box-shadow: rgb(0 0 0 / 50%) 0px 1px 2px;margin-top: 16px;" },
  "links": { "ai": { "css": "&:hover {background-color: #daebfe;}" } },
  "browseStyles": {
    "banner": "background-color: #fff; h2{color:#005587;font-weight: bold;} color:#005587;border-bottom: 1px solid #ffd100; ",
    "browseSectionTitle": { "color": "#2774AE!important" }
  },
  "accordionStyles": { "heading": { "css": "color:#005587;" } },
  "favorites": {
    "alert": {
      "css": "background-color: #ffd100;color:rgba(0,0,0,0.87); div{div{a{color:#2D61AE;font-weight: bold; &:hover { text-decoration: underline;}}}}"
    }
  },
  "paginatorStyles": {
    "link": { "css": "color: #2D61AE;font-weight: bold; &.pg-active {border-bottom: 2px solid #2D61AE;}" }
  },
  "myListMenu": { "css": "box-shadow:rgb(0 0 0 / 50%) 0px 1px 3px; div{h3{color:#005587;}} a{color:#005587;" },
  "relatedPageNav": { "body": { "css": "color: #005587 !important;" } },
  "callToActionButton": { "css": "color:#005587;font-weight: bold;line-height: 22.65px;" },
  "rhsStyles": {
    "css": "box-shadow: rgb(0 0 0 / 50%) 0px 1px 2px;background-color:#E9F1F7;}",
    "attribute": {
      "css": "color: #005587;font-weight: bold;font-size:14px;line-height: 22.65px; :not(:last-of-type) {border-bottom: 1px solid #ffd100;} a:not([data-ignore-global-target])[target='_blank'] {color:#005587;background-color:#E9F1F7;&:hover { color:#2774ae; text-decoration: underline;}}"
    },
    "header": { "css": "color:#212121;font-size: 14px;line-height: 22.65px;" },
    "icon": { "color": "#2774ae" }
  },
  "accordion": {
    "content": {
      "css": "div { a{color: #005587; font-weight: bold; &:hover { color:#2774ae; background-color: #fff; text-decoration: underline;}} }"
    }
  },
  "academicItemsQuickLinkTileStyles_cl": {
    "css": "a { i { margin-top: 0.15rem; }  span { color: #005587; } } &:hover { background-color: #d3e3ee; }"
  }
}
